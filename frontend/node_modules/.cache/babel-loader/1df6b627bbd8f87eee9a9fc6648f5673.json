{"ast":null,"code":"import api from './api';\nexport const authService = {\n  register: async (email, password, name) => {\n    const response = await api.post('/auth/register', {\n      email,\n      password,\n      name\n    });\n    return response.data;\n  },\n  login: async (email, password) => {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    return response.data;\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n  },\n  getCurrentUser: async () => {\n    const response = await api.get('/profile/profile');\n    return response.data;\n  },\n  isAuthenticated: () => {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n};\nexport default authService;","map":{"version":3,"names":["api","authService","register","email","password","name","response","post","data","login","logout","localStorage","removeItem","getCurrentUser","get","isAuthenticated","token","getItem"],"sources":["/Users/keys/workspace/glm_air/boilerplate_app/frontend/src/services/authService.ts"],"sourcesContent":["import api from './api';\n\nexport interface LoginResponse {\n  token: string;\n  user: {\n    id: number;\n    email: string;\n    name?: string;\n  };\n}\n\nexport interface RegisterResponse {\n  token: string;\n  user: {\n    id: number;\n    email: string;\n    name?: string;\n  };\n}\n\nexport const authService = {\n  register: async (email: string, password: string, name?: string): Promise<RegisterResponse> => {\n    const response = await api.post('/auth/register', { email, password, name });\n    return response.data;\n  },\n\n  login: async (email: string, password: string): Promise<LoginResponse> => {\n    const response = await api.post('/auth/login', { email, password });\n    return response.data;\n  },\n\n  logout: (): void => {\n    localStorage.removeItem('token');\n  },\n\n  getCurrentUser: async () => {\n    const response = await api.get('/profile/profile');\n    return response.data;\n  },\n\n  isAuthenticated: (): boolean => {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n};\n\nexport default authService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAoBvB,OAAO,MAAMC,WAAW,GAAG;EACzBC,QAAQ,EAAE,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,EAAEC,IAAa,KAAgC;IAC7F,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,gBAAgB,EAAE;MAAEJ,KAAK;MAAEC,QAAQ;MAAEC;IAAK,CAAC,CAAC;IAC5E,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,KAAK,EAAE,MAAAA,CAAON,KAAa,EAAEC,QAAgB,KAA6B;IACxE,MAAME,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,aAAa,EAAE;MAAEJ,KAAK;MAAEC;IAAS,CAAC,CAAC;IACnE,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDE,MAAM,EAAEA,CAAA,KAAY;IAClBC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAEDC,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,MAAMP,QAAQ,GAAG,MAAMN,GAAG,CAACc,GAAG,CAAC,kBAAkB,CAAC;IAClD,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDO,eAAe,EAAEA,CAAA,KAAe;IAC9B,MAAMC,KAAK,GAAGL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAO,CAAC,CAACD,KAAK;EAChB;AACF,CAAC;AAED,eAAef,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}