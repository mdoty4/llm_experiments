{"ast":null,"code":"var _jsxFileName = \"/Users/keys/workspace/glm_air/boilerplate_app/frontend/src/components/ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const location = useLocation();\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        // Check if token exists\n        const hasToken = localStorage.getItem('token');\n        if (!hasToken) {\n          setIsAuthenticated(false);\n          return;\n        }\n\n        // Try to get current user to validate token\n        await authService.getCurrentUser();\n        setIsAuthenticated(true);\n      } catch (error) {\n        // Token is invalid or expired\n        localStorage.removeItem('token');\n        setIsAuthenticated(false);\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Show loading state while checking authentication\n  if (isAuthenticated === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-32 w-32 border-b-2 border-gray-900\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the protected component\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(ProtectedRoute, \"MjMsKO5GFGeATT/DFEucmdjZmDA=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","useLocation","authService","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","children","_s","isAuthenticated","setIsAuthenticated","location","checkAuth","hasToken","localStorage","getItem","getCurrentUser","error","removeItem","className","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","_c","$RefreshReg$"],"sources":["/Users/keys/workspace/glm_air/boilerplate_app/frontend/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport authService from '../services/authService';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean | null>(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        // Check if token exists\n        const hasToken = localStorage.getItem('token');\n        \n        if (!hasToken) {\n          setIsAuthenticated(false);\n          return;\n        }\n\n        // Try to get current user to validate token\n        await authService.getCurrentUser();\n        setIsAuthenticated(true);\n      } catch (error) {\n        // Token is invalid or expired\n        localStorage.removeItem('token');\n        setIsAuthenticated(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  // Show loading state while checking authentication\n  if (isAuthenticated === null) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-gray-900\"></div>\n      </div>\n    );\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // Render the protected component\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAMlD,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAiB,IAAI,CAAC;EAC5E,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAE9C,IAAI,CAACF,QAAQ,EAAE;UACbH,kBAAkB,CAAC,KAAK,CAAC;UACzB;QACF;;QAEA;QACA,MAAMT,WAAW,CAACe,cAAc,CAAC,CAAC;QAClCN,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOO,KAAK,EAAE;QACd;QACAH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;QAChCR,kBAAkB,CAAC,KAAK,CAAC;MAC3B;IACF,CAAC;IAEDE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIH,eAAe,KAAK,IAAI,EAAE;IAC5B,oBACEN,OAAA;MAAKgB,SAAS,EAAC,+CAA+C;MAAAZ,QAAA,eAC5DJ,OAAA;QAAKgB,SAAS,EAAC;MAAgE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC;EAEV;;EAEA;EACA,IAAI,CAACd,eAAe,EAAE;IACpB,oBAAON,OAAA,CAACJ,QAAQ;MAACyB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEf;MAAS,CAAE;MAACgB,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,oBAAOpB,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACC,EAAA,CA5CIF,cAA6C;EAAA,QAEhCN,WAAW;AAAA;AAAA4B,EAAA,GAFxBtB,cAA6C;AA8CnD,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}